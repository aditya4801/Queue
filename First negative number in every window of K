vector<long long>printFirstNegativeInt(long long int A[], long long int N, long long int K)
{
deque<long long int>dq;
vector<long long>ans;

//process window of k size

for(int i=0;i<K;i++){
if(A[i]<0)
dq.push_back(i);
}
}

//store answer of the first k

if(dq.size()>0){
ans.push_back(A[dq.front()])
}

else{
ans.push_back(0);
}

//process for remaining window

for(int i=0;i<N;i++){
//removal of first element

if(!dq.empty() && i-dq.front()>=K){

dq.pop_front();
}

//addition of element
if(A[i]<0){
dq.push_back(i);
}

if(dq.size()>0){
ans.push_back(A[dq.front()])
}
else{
ans.push_back(0);
}
}
return ans;
}
